{
  "resolvedId": "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/node_modules/@nuxtjs/supabase/dist/runtime/composables/useSupabaseUser.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useSupabaseClient } from \"./useSupabaseClient.mjs\";\nimport { useState } from \"#imports\";\nexport const useSupabaseUser = () => {\n  const supabase = useSupabaseClient();\n  const user = useState(\"supabase_user\", () => null);\n  supabase?.auth.getSession().then(({ data: { session } }) => {\n    if (session) {\n      if (JSON.stringify(user.value) !== JSON.stringify(session.user)) {\n        user.value = session.user;\n      }\n    } else {\n      user.value = null;\n    }\n  });\n  return user;\n};\n",
      "start": 1703362406323,
      "end": 1703362406655,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703362406655,
      "end": 1703362406655,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703362406655,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703362406655,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useState } from '#app';\nimport { useSupabaseClient } from \"./useSupabaseClient.mjs\";\nexport const useSupabaseUser = () => {\n  const supabase = useSupabaseClient();\n  const user = useState(\"supabase_user\", () => null);\n  supabase?.auth.getSession().then(({ data: { session } }) => {\n    if (session) {\n      if (JSON.stringify(user.value) !== JSON.stringify(session.user)) {\n        user.value = session.user;\n      }\n    } else {\n      user.value = null;\n    }\n  });\n  return user;\n};\n",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAE5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useState } from '#app';\nimport { useSupabaseClient } from \"./useSupabaseClient.mjs\";\nexport const useSupabaseUser = () => {\n  const supabase = useSupabaseClient();\n  const user = useState(\"supabase_user\", () => null);\n  supabase?.auth.getSession().then(({ data: { session } }) => {\n    if (session) {\n      if (JSON.stringify(user.value) !== JSON.stringify(session.user)) {\n        user.value = session.user;\n      }\n    } else {\n      user.value = null;\n    }\n  });\n  return user;\n};\n",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAE5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "nuxt:pure-annotations",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703362406656,
      "end": 1703362406656,
      "order": "normal"
    }
  ]
}
