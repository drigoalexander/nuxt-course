{
  "resolvedId": "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/store/courseProgress.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineStore } from \"pinia\";\n\nexport const useCourseProgress = defineStore(\"courseProgress\", () => {\n  const user = useSupabaseUser();\n  const progress = ref<any>({});\n  const initialized = ref(false);\n\n  async function initialize() {\n    if (initialized.value) return;\n    initialized.value = true;\n  }\n  const toggleComplete = async (chapter: string, lesson: string) => {\n    const user = useSupabaseUser();\n    if (!user.value) return;\n    if (!chapter || !lesson) {\n      const {\n        params: { chapterSession, lessonSlug },\n      } = useRoute();\n      chapter = chapterSession as string;\n      lesson = lessonSlug as string;\n    }\n    const currentProgress = progress.value[chapter]?.[lesson];\n    progress.value[chapter] = {\n      ...progress.value[chapter],\n      [lesson]: !currentProgress,\n    };\n    try {\n      await $fetch(`/api/course/chapter/${chapter}/lesson/${lesson}/progress`, {\n        method: \"POST\",\n        body: {\n          completed: !currentProgress,\n          userEmail: user.value.email,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n      progress.value[chapter] = {\n        ...progress.value[chapter],\n        [lesson]: currentProgress,\n      };\n    }\n  };\n\n  return {\n    initialize,\n    progress,\n    toggleComplete,\n  };\n});\n",
      "start": 1703362406662,
      "end": 1703362406889,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362406889,
      "end": 1703362406889,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362406889,
      "end": 1703362406889,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362406889,
      "end": 1703362406889,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362406889,
      "end": 1703362406889,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703362406889,
      "end": 1703362406889,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703362406889,
      "end": 1703362406889,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineStore } from \"pinia\";\nexport const useCourseProgress = defineStore(\"courseProgress\", () => {\n  const user = useSupabaseUser();\n  const progress = ref({});\n  const initialized = ref(false);\n  async function initialize() {\n    if (initialized.value)\n      return;\n    initialized.value = true;\n  }\n  const toggleComplete = async (chapter, lesson) => {\n    const user2 = useSupabaseUser();\n    if (!user2.value)\n      return;\n    if (!chapter || !lesson) {\n      const {\n        params: { chapterSession, lessonSlug }\n      } = useRoute();\n      chapter = chapterSession;\n      lesson = lessonSlug;\n    }\n    const currentProgress = progress.value[chapter]?.[lesson];\n    progress.value[chapter] = {\n      ...progress.value[chapter],\n      [lesson]: !currentProgress\n    };\n    try {\n      await $fetch(`/api/course/chapter/${chapter}/lesson/${lesson}/progress`, {\n        method: \"POST\",\n        body: {\n          completed: !currentProgress,\n          userEmail: user2.value.email\n        }\n      });\n    } catch (error) {\n      console.error(error);\n      progress.value[chapter] = {\n        ...progress.value[chapter],\n        [lesson]: currentProgress\n      };\n    }\n  };\n  return {\n    initialize,\n    progress,\n    toggleComplete\n  };\n});\n",
      "start": 1703362406889,
      "end": 1703362406890,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/store/courseProgress.ts"
        ],
        "sourcesContent": [
          "import { defineStore } from \"pinia\";\n\nexport const useCourseProgress = defineStore(\"courseProgress\", () => {\n  const user = useSupabaseUser();\n  const progress = ref<any>({});\n  const initialized = ref(false);\n\n  async function initialize() {\n    if (initialized.value) return;\n    initialized.value = true;\n  }\n  const toggleComplete = async (chapter: string, lesson: string) => {\n    const user = useSupabaseUser();\n    if (!user.value) return;\n    if (!chapter || !lesson) {\n      const {\n        params: { chapterSession, lessonSlug },\n      } = useRoute();\n      chapter = chapterSession as string;\n      lesson = lessonSlug as string;\n    }\n    const currentProgress = progress.value[chapter]?.[lesson];\n    progress.value[chapter] = {\n      ...progress.value[chapter],\n      [lesson]: !currentProgress,\n    };\n    try {\n      await $fetch(`/api/course/chapter/${chapter}/lesson/${lesson}/progress`, {\n        method: \"POST\",\n        body: {\n          completed: !currentProgress,\n          userEmail: user.value.email,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n      progress.value[chapter] = {\n        ...progress.value[chapter],\n        [lesson]: currentProgress,\n      };\n    }\n  };\n\n  return {\n    initialize,\n    progress,\n    toggleComplete,\n  };\n});\n"
        ],
        "mappings": "AAAA,SAAS,mBAAmB;AAErB,aAAM,oBAAoB,YAAY,kBAAkB,MAAM;AACnE,QAAM,OAAO,gBAAgB;AAC7B,QAAM,WAAW,IAAS,CAAC,CAAC;AAC5B,QAAM,cAAc,IAAI,KAAK;AAE7B,iBAAe,aAAa;AAC1B,QAAI,YAAY;AAAO;AACvB,gBAAY,QAAQ;AAAA,EACtB;AACA,QAAM,iBAAiB,OAAO,SAAiB,WAAmB;AAChE,UAAMA,QAAO,gBAAgB;AAC7B,QAAI,CAACA,MAAK;AAAO;AACjB,QAAI,CAAC,WAAW,CAAC,QAAQ;AACvB,YAAM;AAAA,QACJ,QAAQ,EAAE,gBAAgB,WAAW;AAAA,MACvC,IAAI,SAAS;AACb,gBAAU;AACV,eAAS;AAAA,IACX;AACA,UAAM,kBAAkB,SAAS,MAAM,OAAO,IAAI,MAAM;AACxD,aAAS,MAAM,OAAO,IAAI;AAAA,MACxB,GAAG,SAAS,MAAM,OAAO;AAAA,MACzB,CAAC,MAAM,GAAG,CAAC;AAAA,IACb;AACA,QAAI;AACF,YAAM,OAAO,uBAAuB,OAAO,WAAW,MAAM,aAAa;AAAA,QACvE,QAAQ;AAAA,QACR,MAAM;AAAA,UACJ,WAAW,CAAC;AAAA,UACZ,WAAWA,MAAK,MAAM;AAAA,QACxB;AAAA,MACF,CAAC;AAAA,IACH,SAAS,OAAO;AACd,cAAQ,MAAM,KAAK;AACnB,eAAS,MAAM,OAAO,IAAI;AAAA,QACxB,GAAG,SAAS,MAAM,OAAO;AAAA,QACzB,CAAC,MAAM,GAAG;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;",
        "names": [
          "user"
        ]
      }
    },
    {
      "name": "vite:json",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703362406890,
      "end": 1703362406890,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useSupabaseUser } from '/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/node_modules/@nuxtjs/supabase/dist/runtime/composables/useSupabaseUser.mjs';\nimport { ref } from 'vue';\nimport { useRoute } from '#app';\nimport { defineStore } from \"pinia\";\nexport const useCourseProgress = defineStore(\"courseProgress\", () => {\n  const user = useSupabaseUser();\n  const progress = ref({});\n  const initialized = ref(false);\n  async function initialize() {\n    if (initialized.value)\n      return;\n    initialized.value = true;\n  }\n  const toggleComplete = async (chapter, lesson) => {\n    const user2 = useSupabaseUser();\n    if (!user2.value)\n      return;\n    if (!chapter || !lesson) {\n      const {\n        params: { chapterSession, lessonSlug }\n      } = useRoute();\n      chapter = chapterSession;\n      lesson = lessonSlug;\n    }\n    const currentProgress = progress.value[chapter]?.[lesson];\n    progress.value[chapter] = {\n      ...progress.value[chapter],\n      [lesson]: !currentProgress\n    };\n    try {\n      await $fetch(`/api/course/chapter/${chapter}/lesson/${lesson}/progress`, {\n        method: \"POST\",\n        body: {\n          completed: !currentProgress,\n          userEmail: user2.value.email\n        }\n      });\n    } catch (error) {\n      console.error(error);\n      progress.value[chapter] = {\n        ...progress.value[chapter],\n        [lesson]: currentProgress\n      };\n    }\n  };\n  return {\n    initialize,\n    progress,\n    toggleComplete\n  };\n});\n",
      "start": 1703362406890,
      "end": 1703362406891,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useSupabaseUser } from '/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/node_modules/@nuxtjs/supabase/dist/runtime/composables/useSupabaseUser.mjs';\nimport { ref } from 'vue';\nimport { useRoute } from '#app';\nimport { defineStore } from \"pinia\";\nexport const useCourseProgress = defineStore(\"courseProgress\", () => {\n  const user = useSupabaseUser();\n  const progress = ref({});\n  const initialized = ref(false);\n  async function initialize() {\n    if (initialized.value)\n      return;\n    initialized.value = true;\n  }\n  const toggleComplete = async (chapter, lesson) => {\n    const user2 = useSupabaseUser();\n    if (!user2.value)\n      return;\n    if (!chapter || !lesson) {\n      const {\n        params: { chapterSession, lessonSlug }\n      } = useRoute();\n      chapter = chapterSession;\n      lesson = lessonSlug;\n    }\n    const currentProgress = progress.value[chapter]?.[lesson];\n    progress.value[chapter] = {\n      ...progress.value[chapter],\n      [lesson]: !currentProgress\n    };\n    try {\n      await $fetch(`/api/course/chapter/${chapter}/lesson/${lesson}/progress`, {\n        method: \"POST\",\n        body: {\n          completed: !currentProgress,\n          userEmail: user2.value.email\n        }\n      });\n    } catch (error) {\n      console.error(error);\n      progress.value[chapter] = {\n        ...progress.value[chapter],\n        [lesson]: currentProgress\n      };\n    }\n  };\n  return {\n    initialize,\n    progress,\n    toggleComplete\n  };\n});\n",
      "start": 1703362406890,
      "end": 1703362406891,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "post"
    },
    {
      "name": "nuxt:pure-annotations",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703362406891,
      "end": 1703362406891,
      "order": "normal"
    }
  ]
}
