{
  "resolvedId": "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { expiresAt, looksLikeFetchResponse } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthWeakPasswordError, AuthUnknownError, } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst NETWORK_ERROR_CODES = [502, 503, 504];\nasync function handleError(error) {\n    if (!looksLikeFetchResponse(error)) {\n        throw new AuthRetryableFetchError(_getErrorMessage(error), 0);\n    }\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        throw new AuthRetryableFetchError(_getErrorMessage(error), error.status);\n    }\n    let data;\n    try {\n        data = await error.json();\n    }\n    catch (e) {\n        throw new AuthUnknownError(_getErrorMessage(e), e);\n    }\n    if (typeof data === 'object' &&\n        data &&\n        typeof data.weak_password === 'object' &&\n        data.weak_password &&\n        Array.isArray(data.weak_password.reasons) &&\n        data.weak_password.reasons.length &&\n        data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n        throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\n    }\n    throw new AuthApiError(_getErrorMessage(data), error.status || 500);\n}\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport async function _request(fetcher, method, url, options) {\n    var _a;\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n        headers['Authorization'] = `Bearer ${options.jwt}`;\n    }\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        qs['redirect_to'] = options.redirectTo;\n    }\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n    const data = await _handleRequest(fetcher, method, url + queryString, { headers, noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n}\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\n    const requestParams = _getRequestParams(method, options, parameters, body);\n    let result;\n    try {\n        result = await fetcher(url, requestParams);\n    }\n    catch (e) {\n        console.error(e);\n        // fetch failed, likely due to a network or CORS error\n        throw new AuthRetryableFetchError(_getErrorMessage(e), 0);\n    }\n    if (!result.ok) {\n        await handleError(result);\n    }\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\n        return result;\n    }\n    try {\n        return await result.json();\n    }\n    catch (e) {\n        await handleError(e);\n    }\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        if (!data.expires_at) {\n            session.expires_at = expiresAt(data.expires_in);\n        }\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map",
      "start": 1703362405232,
      "end": 1703362405286,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362405286,
      "end": 1703362405286,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "nuxt:pure-annotations",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703362405287,
      "end": 1703362405287,
      "order": "normal"
    }
  ]
}
