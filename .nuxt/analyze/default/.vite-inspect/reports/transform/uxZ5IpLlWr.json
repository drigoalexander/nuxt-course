{
  "resolvedId": "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/composables/useLessonWithCache.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { StorageSerializers } from \"@vueuse/core\";\nexport default async <T>(url: string) => {\n  const cached = useSessionStorage<T>(url, null, {\n    serializer: StorageSerializers.object,\n  });\n  if (!cached.value) {\n    const { data, error } = await useFetch<T>(url, {\n      headers: useRequestHeaders([\"cookie\"]),\n    });\n\n    if (error.value) {\n      throw createError({\n        ...error.value,\n      });\n    }\n\n    cached.value = { data } as T;\n  }\n  //   else {\n  //     console.log(`Cached From Session for ${url}`);\n  //   }\n\n  return cached;\n};\n",
      "start": 1703362405201,
      "end": 1703362405242,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362405242,
      "end": 1703362405242,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362405242,
      "end": 1703362405242,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703362405242,
      "end": 1703362405242,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703362405242,
      "end": 1703362405242,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { StorageSerializers } from \"@vueuse/core\";\nexport default async (url) => {\n  const cached = useSessionStorage(url, null, {\n    serializer: StorageSerializers.object\n  });\n  if (!cached.value) {\n    const { data, error } = await useFetch(url, {\n      headers: useRequestHeaders([\"cookie\"])\n    });\n    if (error.value) {\n      throw createError({\n        ...error.value\n      });\n    }\n    cached.value = { data };\n  }\n  return cached;\n};\n",
      "start": 1703362405242,
      "end": 1703362405275,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/composables/useLessonWithCache.ts"
        ],
        "sourcesContent": [
          "import { StorageSerializers } from \"@vueuse/core\";\nexport default async <T>(url: string) => {\n  const cached = useSessionStorage<T>(url, null, {\n    serializer: StorageSerializers.object,\n  });\n  if (!cached.value) {\n    const { data, error } = await useFetch<T>(url, {\n      headers: useRequestHeaders([\"cookie\"]),\n    });\n\n    if (error.value) {\n      throw createError({\n        ...error.value,\n      });\n    }\n\n    cached.value = { data } as T;\n  }\n  //   else {\n  //     console.log(`Cached From Session for ${url}`);\n  //   }\n\n  return cached;\n};\n"
        ],
        "mappings": "AAAA,SAAS,0BAA0B;AACnC,eAAe,OAAU,QAAgB;AACvC,QAAM,SAAS,kBAAqB,KAAK,MAAM;AAAA,IAC7C,YAAY,mBAAmB;AAAA,EACjC,CAAC;AACD,MAAI,CAAC,OAAO,OAAO;AACjB,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAAY,KAAK;AAAA,MAC7C,SAAS,kBAAkB,CAAC,QAAQ,CAAC;AAAA,IACvC,CAAC;AAED,QAAI,MAAM,OAAO;AACf,YAAM,YAAY;AAAA,QAChB,GAAG,MAAM;AAAA,MACX,CAAC;AAAA,IACH;AAEA,WAAO,QAAQ,EAAE,KAAK;AAAA,EACxB;AAKA,SAAO;AACT;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703362405275,
      "end": 1703362405275,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "import { StorageSerializers } from \"@vueuse/core\";\nexport default async (url) => {\n  const cached = useSessionStorage(url, null, {\n    serializer: StorageSerializers.object\n  });\n  if (!cached.value) {\n    const { data, error } = await useFetch(url, {\n      headers: useRequestHeaders([\"cookie\"])\n    }, '$g1FyUMTTRQ');\n    if (error.value) {\n      throw createError({\n        ...error.value\n      });\n    }\n    cached.value = { data };\n  }\n  return cached;\n};\n",
      "start": 1703362405276,
      "end": 1703362405276,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClzC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,gBAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useSessionStorage } from '@vueuse/core';\nimport { useFetch, useRequestHeaders, createError } from '#app';\nimport { StorageSerializers } from \"@vueuse/core\";\nexport default async (url) => {\n  const cached = useSessionStorage(url, null, {\n    serializer: StorageSerializers.object\n  });\n  if (!cached.value) {\n    const { data, error } = await useFetch(url, {\n      headers: useRequestHeaders([\"cookie\"])\n    }, '$g1FyUMTTRQ');\n    if (error.value) {\n      throw createError({\n        ...error.value\n      });\n    }\n    cached.value = { data };\n  }\n  return cached;\n};\n",
      "start": 1703362405276,
      "end": 1703362405277,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "post"
    },
    {
      "name": "nuxt:pure-annotations",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703362405277,
      "end": 1703362405277,
      "order": "normal"
    }
  ]
}
