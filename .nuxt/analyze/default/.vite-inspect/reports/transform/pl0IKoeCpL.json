{
  "resolvedId": "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/node_modules/@supabase/storage-js/dist/module/lib/fetch.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res) {\n        error\n            .json()\n            .then((err) => {\n            reject(new StorageApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((err) => {\n            reject(new StorageUnknownError(_getErrorMessage(err), err));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map",
      "start": 1703362405312,
      "end": 1703362405386,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703362405386,
      "end": 1703362405386,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703362405386,
      "end": 1703362405387,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "nuxt:pure-annotations",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703362405387,
      "end": 1703362405387,
      "order": "normal"
    }
  ]
}
