{
  "resolvedId": "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/node_modules/@supabase/realtime-js/dist/module/lib/timer.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map",
      "start": 1703362405243,
      "end": 1703362405304,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703362405304,
      "end": 1703362405304,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703362405304,
      "end": 1703362405305,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "nuxt:pure-annotations",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703362405305,
      "end": 1703362405305,
      "order": "normal"
    }
  ]
}
