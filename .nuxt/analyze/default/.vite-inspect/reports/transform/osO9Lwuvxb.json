{
  "resolvedId": "/Users/drigoalexander/Documents/Practice/NUXT/nuxt-course/node_modules/@supabase/supabase-js/dist/module/lib/fetch.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-ignore\nimport nodeFetch, { Headers as NodeFetchHeaders } from '@supabase/node-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = nodeFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return NodeFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map",
      "start": 1703362405025,
      "end": 1703362405115,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "nuxt:pure-annotations",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703362405115,
      "end": 1703362405115,
      "order": "normal"
    }
  ]
}
